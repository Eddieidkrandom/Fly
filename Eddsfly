-- LocalScript inside StarterPlayer > StarterPlayerScripts

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpeedGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Create Button
local button = Instance.new("TextButton")
button.Name = "SpeedToggleButton"
button.Size = UDim2.new(0.2, 0, 0.1, 0)
button.Position = UDim2.new(0.75, 0, 0.85, 0)
button.AnchorPoint = Vector2.new(0.5, 0.5)
button.BackgroundColor3 = Color3.fromRGB(255, 170, 0)
button.Text = "Speed: OFF"
button.TextScaled = true
button.Font = Enum.Font.SourceSansBold
button.TextColor3 = Color3.fromRGB(0, 0, 0)
button.Parent = screenGui

-- Add Aspect Ratio Constraint
local aspectConstraint = Instance.new("UIAspectRatioConstraint")
aspectConstraint.AspectRatio = 2.5
aspectConstraint.Parent = button

-- Toggle Speed Logic
local isSpeedBoosted = false
local normalSpeed = 16
local boostedSpeed = 50

local function getHumanoid()
	local character = player.Character or player.CharacterAdded:Wait()
	return character:WaitForChild("Humanoid")
end

button.MouseButton1Click:Connect(function()
	local humanoid = getHumanoid()
	isSpeedBoosted = not isSpeedBoosted

	if isSpeedBoosted then
		humanoid.WalkSpeed = boostedSpeed
		button.Text = "Speed: ON"
	else
		humanoid.WalkSpeed = normalSpeed
		button.Text = "Speed: OFF"
	end
end)

-- Dragging Functionality
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
	local delta = input.Position - dragStart
	button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
		startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

button.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or
	   input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = button.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

button.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or
	   input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
